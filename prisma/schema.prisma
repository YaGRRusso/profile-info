// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  picture      String
  name         String
  nickname     String   @unique
  email        String   @unique
  password     String
  role         String   @default("USER")
  phone        String   @unique
  birth        DateTime
  title        String
  presentation String
  description  String
  address      String
  postal       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  Skills    Skill[]
  Projects  Project[]
  Formation Formation[]
  Course    Course[]
}

model Skill {
  id        String   @id @default(cuid())
  name      String
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  Projects   Project[]
  Users      User[]
  Formations Formation[]
  Courses    Course[]
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String
  image       String
  link        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId String
  User   User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Skills Skill[]
}

model Formation {
  id          String    @id @default(cuid())
  name        String
  school      String
  description String
  status      String
  certificate String
  start       DateTime
  end         DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  userId String
  User   User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Skills Skill[]
}

model Course {
  id          String   @id @default(cuid())
  name        String
  school      String
  description String
  status      String
  certificate String
  hours       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId String
  User   User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  Skills Skill[]
}
